// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider      = "prisma-client-ts"
    output        = "../src/generated/prisma"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         String   @id @default(cuid())
    created_at DateTime @default(now())

    email      String @unique
    password   String // hashed
    first_name String
    last_name  String

    @@map("users")
}

model Client {
    id         String   @id @default(cuid())
    created_at DateTime @default(now())

    name            String
    email           String?
    phone           String?
    notes           String?
    organization_id String // Will end up being a relation to the Organizations table
    payments        Payment[]

    @@map("clients")
}

model Vendor {
    id         String   @id @default(cuid())
    created_at DateTime @default(now())

    name            String
    email           String?
    phone           String?
    notes           String?
    organization_id String // Will end up being a relation to the Organizations table
    payments        Payment[]

    @@map("vendors")
}

model Payment {
    id         String   @id @default(cuid())
    created_at DateTime @default(now())

    type               String // Enum in code 'incoming' | 'outgoing'
    received_at        DateTime
    amount             Int
    client_id          String?
    vendor_id          String?
    invoice_id         String?
    payment_account_id String

    client          Client?        @relation(fields: [client_id], references: [id])
    vendor          Vendor?        @relation(fields: [vendor_id], references: [id])
    payment_account PaymentAccount @relation(fields: [payment_account_id], references: [id])

    @@map("payments")
}

model PaymentAccount {
    id         String   @id @default(cuid())
    created_at DateTime @default(now())

    name  String // "Stripe", "Bank Transfer", "Upwork", etc
    type  String // optional: "platform", "bank", "card"
    notes String? // optional internal info

    payments Payment[]

    @@map("payment_accounts")
}
